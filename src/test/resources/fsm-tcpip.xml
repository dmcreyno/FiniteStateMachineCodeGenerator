<?xml version="1.0" encoding="UTF-8" ?>
<fsm xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://www.cobbinterwebs.com/schemas/fsm.xsd"
        name="TCP/IP" author="Cobb Interwebs, LLC." version="0.1b"
        package="com.cobbinterwebs.fsm.tcpip"
        implClass="TCPIP_StateMachine"
        customHandlerClass="com.cobbinterwebs.fsm.tcpip.custom.MyHandler">
    <state name="closed" >
        <event name="anything/reset" resultState="closed" handlerFunction="Closed_Reset"/>
        <event name="passive_open" resultState="listen" handlerFunction="Closed_PassiveOpen"/>
        <event name="active_open/syn" resultState="listen" handlerFunction="Closed_ActiveOpenSyn"/>
    </state>
    <state name="listen">
        <event name="syn/syn+ack" resultState="syn_received" handlerFunction="Listen_SynSynPlusAck"/>
        <event name="send/syn" resultState="syn_sent" handlerFunction="Listen_SendSyn"/>
        <event name="close" resultState="closed" handlerFunction="Listen_Close" />
    </state>
    <state name="syn_received">
        <event name="close/fin" resultState="fin_wait_1" handlerFunction="SynReceived_CloseFin"/>
        <event name="ack" resultState="established" handlerFunction="SynReceived_Ack"/>
        <event name="reset" resultState="listen" handlerFunction="SynReceived_Reset"/>
    </state>
    <state name="syn_sent">
        <event name="syn_syn+ack" resultState="syn_received" handlerFunction="SynSent_SynSynPlusAck"/>
        <event name="syn+ack/ack" resultState="established" handlerFunction="SynSent_SynPlusAckAck"/>
        <event name="close" resultState="closed" handlerFunction="SynSent_Close"/>
        <event name="timeout" resultState="closed" handlerFunction="SynSent_TimeOut"/>
        <event name="reset" resultState="closed" handlerFunction="SynSent_Reset"/>
    </state>
    <state name="established">
        <event name="close/fin" resultState="fin_wait_1" handlerFunction="Established_CloseFin"/>
        <event name="fin/ack" resultState="close_wait" handlerFunction="Established_FinAck"/>
    </state>
    <state name="fin_wait_1" >
        <event name="fin/ack" resultState="closing" handlerFunction="FinWait1_FinAck"/>
        <event name="fin_ack/ack" resultState="timed_wait" handlerFunction="FinWait1_Fin_AckAck"/>
        <event name="ack" resultState="fin_wait_2" handlerFunction="FinWait1_Ack"/>
    </state>
    <state name="close_wait" >
        <event name="close/fin" resultState="last_ack" handlerFunction="CloseWait_CloseFin"/>
    </state>
    <state name="closing" >
        <event name="ack" resultState="timed_wait" handlerFunction="Closing_Ack"/>
    </state>
    <state name="fin_wait_2" >
        <event name="fin/ack" resultState="timed_wait" handlerFunction="FinWait2_FinAck"/>
    </state>
    <state name="last_ack" >
        <event name="ack/" resultState="closed" handlerFunction="LastAck_Ack"/>
    </state>
    <state name="timed_wait" >
        <event name="timeout" resultState="closed" handlerFunction="TimedWait_Timeout"/>
    </state>
</fsm>